import os



import json



import argparse







from tqdm import tqdm



from icecream import ic



from collections import defaultdict











def getFileNames(path):



    names = [f for f in os.listdir(path)]



    return names











def getFileData(path):



    data = []



    with open(path) as f:



        try:



            for line in f:



                data.append(json.loads(line))



        except:



            pass



    return data







def write(data, path):



    f = open(path, 'w+')



    for dic in data:



        f.write(json.dumps(dic, ensure_ascii=False))



        f.write('\n')











def main(args):







    data_path = args.data_path



    output_path = args.output_path







    if not os.path.exists(output_path):



        os.mkdir(output_path)







    fnames = getFileNames(data_path)



    # dataset = defaultdict(list)



    dataset = []







    for fn in tqdm(fnames):



        path = f'{data_path}/{fn}'



        data = getFileData(path)



        new_data = []



        for d in data:



            new_data.append({



                'title': d['title'],



                'lang': fn[:2],



                'qid': d['qid'],



                'xalign_sent': d['xalign_sent'],



                'xalign_facts': d['xalign_facts']



            })



        # split = fn[3:-5]



        # dataset[split].extend(new_data)



        dataset.extend(new_data)



    write(dataset, f'{output_path}/test.json')







    # write(dataset['train'], f'{output_path}/train.json')



    # write(dataset['val'], f'{output_path}/val.json')



    # write(dataset['test'], f'{output_path}/test.json')







if __name__ == "__main__":







    parser = argparse.ArgumentParser()



    parser.add_argument('--data_path')



    parser.add_argument('--output_path')







    args = parser.parse_args()



    main(args)



